services:
  postgres:
    image: postgres:alpine
    container_name: postgres
    command: postgres -c 'max_connections=50'
    ports:
      - 5433:5432
    restart: unless-stopped
    volumes:
      - ./data/dumps:/dumps
    env_file:
      - ./data/env/database.dev.env
      
  backend:
    build:
      context: ./backend/
      args:
        PROFILE: dev
    image: humanaethica-backend
    container_name: backend
    depends_on:
      - postgres
    ports:
      - 8080:8080
    restart: unless-stopped
    volumes:
      - ./data/images:/images
      - ./data/load:/load
      - ./data/export:/export
    env_file:
      - ./data/env/backend.dev.env
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/hedb

  frontend:
    build:
      context:  ./frontend/
      dockerfile: Dockerfile
      args:
        NODE_ENV: dev
    image: humanaethica-frontend                                                     
    container_name: frontend
    depends_on:
      - backend
    ports:
      - 8081:80
    restart: unless-stopped
    volumes:
      - ./data/localhost-nginx.conf:/etc/nginx/nginx.conf
      - ./data/error.log:/var/log/nginx/error.log
      - ./data/access.log:/var/log/nginx/access.log

  be-unit-tests:
    image: maven:3.9.6-eclipse-temurin-21
    stop_signal: SIGKILL
    stdin_open: true
    tty: true
    volumes:
      - ./backend:/backend
      - ~/.m2:/root/.m2
    command: mvn -f /backend/pom.xml clean -Ptest test -Dtest="${UNIT}"

  integration-tests:
    image: maven:3.9.6-eclipse-temurin-21
    stop_signal: SIGKILL
    stdin_open: true
    tty: true
    depends_on:
      - postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/hedb
      - PSQL_INT_TEST_DB_USERNAME=engineer
      - PSQL_INT_TEST_DB_PASSWORD=password
    volumes:
      - ./backend:/backend
      - ~/.m2:/root/.m2
    command: mvn -f /backend/pom.xml clean -Ptest-int integration-test -Dit.test="${INTEGRATION}"

  e2e:
    image: cypress-14.0.0-node-22.13.1-chrome-132.0.6834.83-1-ff-134.0.2-edge-132.0.2957.115-1
    build:
      context:  ./frontend/
      dockerfile: Dockerfile_cy
    container_name: cypress
    depends_on:
      - frontend
    environment:
      - CYPRESS_baseUrl=http://frontend:80
    command: npx cypress run
    volumes:
      - ./frontend/cypress:/cypress
      - ./frontend/tsconfig.json:/tsconfig.json
      - ./frontend/cypress.config.ts:/cypress.config.ts
      - ./frontend/cypress.env.json:/cypress.env.json
      - ./frontend/tests:/tests
